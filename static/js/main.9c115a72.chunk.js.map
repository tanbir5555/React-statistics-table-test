{"version":3,"sources":["components/app/components/table.js","components/app/components/input.js","components/app/main.js","components/App.js","index.js"],"names":["Table","CAplus","x_","x_2","sumFD","FreXD","D_","A_","sumFixi","frequencyTotal","PercentageFrequency","RelativeFrequency","frequencyDensity","freXmid","classRange","lcf","hcf","highClass","lowClass","frequency","classes","midPoints","className","id","map","value","index","Input","clearAll","setStateC","setStateF","send","onClick","onSubmit","e","preventDefault","onChange","target","placeholder","Main","useState","setClasses","setHighClass","setLowClass","setFrequency","setD","setA","setFreXD","setCAplus","setMidPoints","setFreXmid","lessCumulativeFrequency","setLessCumulativeFrequency","greaterCumulativeFrequency","setGreaterCumulativeFrequency","setFrequencyDensity","setRelativeFrequency","setClassRange","setPercentageFrequency","setFrequencyTotal","setSumFixi","setSumFD","setX_","setX_2","ready","setReady","fre","cla","viewClasses","split","val","parseInt","middlePoint","numFre","totalF","classR","lessThanCF","push","length","greaterThanCF","reverse","FrequencyD","RelativeF","toFixed","percentageF","theA","totalClassR","GorClassR","CPlus","theD","frequencyXD","fixi","TheX_","sumFrequencyXD","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9c115a72.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './style/table.css'\r\nexport default function Table({CAplus,x_,x_2,sumFD,FreXD,D_,A_,sumFixi,frequencyTotal,PercentageFrequency,RelativeFrequency,frequencyDensity,freXmid,classRange,lcf,hcf,highClass,lowClass,frequency,classes,midPoints}) {\r\n  return (\r\n    <div className=\"container\">\r\n      <table id=\"customers\">\r\n      <tbody>\r\n          \r\n       \r\n        <tr>\r\n          <td><strong>classes</strong></td>\r\n          <td><strong>frequency</strong></td>\r\n          <td><strong>Less Than  Cumulative Frequency </strong></td>\r\n          <td><strong>Greater Than  Cumulative Frequency</strong></td>\r\n          <td><strong>highClass</strong></td>\r\n          <td><strong>lowClass</strong></td>\r\n          <td><strong>midPoints</strong></td>\r\n\r\n          <td><strong>classRange</strong></td>\r\n          <td><strong>fixi</strong></td>\r\n          <td><strong>frequencyDensity</strong></td>\r\n          <td><strong>RelativeFrequency</strong></td>\r\n          <td><strong>PercentageFrequency</strong></td>\r\n          {CAplus?<td><strong>d=(x-{A_})/range</strong></td>:<td><strong>d=(x-{A_})</strong></td>}\r\n    \r\n          <td><strong>Frequency*d</strong></td>\r\n          <td><strong>Frequency*middlePoint</strong></td>\r\n\r\n\r\n          {/* <td><strong></strong></td> */}\r\n        </tr>\r\n\r\n{classes.map((value,index)=>{\r\n\r\n  return(\r\n    <tr key={index}>\r\n          <td>{value}</td>\r\n          <td>{frequency[index]}</td>\r\n          <td>{lcf[index]}</td>\r\n          <td>{hcf[index]}</td>\r\n          <td>{lowClass[index]}</td>\r\n          <td>{highClass[index]}</td>\r\n          <td>{midPoints[index]}</td>\r\n\r\n          <td>{classRange[index]}</td>\r\n          <td>{freXmid[index]}</td>\r\n          <td>{frequencyDensity[index]}</td>\r\n          <td>{RelativeFrequency[index]}</td>\r\n          <td>{PercentageFrequency[index]}</td>\r\n          <td>{D_[index]}</td>\r\n          <td>{FreXD[index]}</td>\r\n          <td>{freXmid[index]}</td>\r\n\r\n          \r\n      </tr>\r\n  )\r\n})}\r\n        \r\n        \r\n       </tbody>\r\n      </table>\r\n\r\n      <div className='answers'>  \r\n      {CAplus?<div className=''><strong className=''> Range (C): </strong> {classRange[0]}  </div>:null}\r\n      <div className=''><strong className=''> A : </strong> {A_}  </div>\r\n      <div className=''><strong className=''>Sum of Frequency (N) : </strong> {frequencyTotal}  </div>\r\n      <div className=''><strong className=''> Sum of Frequency & d (x) : </strong> {sumFD}  </div>\r\n      <div className=''><strong className=''> Sum of Frequency & midPoints (x) (sum fixi) : </strong> {sumFixi}  </div>\r\n      <div className=''><strong className=''> x_ (sortMethod) : </strong> {x_}  </div>\r\n      <div className=''><strong className=''> x_ (MainMethod) : </strong> {x_2} </div>  \r\n       </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./style/input.css\";\r\nexport default function Input({clearAll,frequency,classes,setStateC,setStateF,send}) {\r\n    \r\n  return (\r\n    <div className=\"container\">\r\n      <h3 className=\"header\">Making Statistics Math App</h3>\r\n      <button onClick={()=>{clearAll()}} className='btn-clear'>  Clear </button>\r\n      <form\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n        }}\r\n      >\r\n        <h3 className=\"header small\">\r\n          Please Enter your <strong>classes</strong>\r\n        </h3>\r\n        <div className=\"inputs-area\">\r\n          {\" \"}\r\n          <textarea value={classes} onChange={(e)=>{setStateC(e.target.value)}} className=\"input\" placeholder=\"10-20,20-30....\">\r\n            \r\n          </textarea>{\" \"}\r\n        </div>\r\n        <h3 className=\"header small\">\r\n          Please Enter your <strong>Frequency</strong>{\" \"}\r\n        </h3>\r\n        <div className=\"inputs-area\">\r\n          {\" \"}\r\n          <textarea value={frequency} onChange={(e)=>{setStateF(e.target.value)}} className=\"input\" placeholder=\"5,8,7,10,2,1,3....\">\r\n            \r\n          </textarea>{\" \"}\r\n        </div>\r\n        <button onClick={()=>{send()}} className=\"btn-send\">Send</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Table from \"./components/table\";\r\nimport Input from \"./components/input\";\r\nfunction Main() {\r\n  let [classes, setClasses] = useState(\"10-20,20-30,30-40,40-50,50-60,60-70,70-200\");\r\n  let [highClass, setHighClass] = useState(\"\");\r\n  let [lowClass, setLowClass] = useState(\"\");\r\n  let [frequency, setFrequency] = useState(\"15,12,13,18,17,27,10\");\r\n  \r\n  let [D_ , setD]=useState(\"\")\r\n  let [A_ , setA]=useState(\"\")\r\n  let [FreXD,setFreXD]=useState(\"\")\r\n  let [CAplus,setCAplus]=useState(\"\")\r\n\r\n  let [midPoints, setMidPoints] = useState(\"\");\r\n  let [freXmid,setFreXmid]=useState(\"\")\r\n  let [lessCumulativeFrequency,setLessCumulativeFrequency]=useState(\"\")\r\n  let [greaterCumulativeFrequency,setGreaterCumulativeFrequency]=useState(\"\")\r\n  let [frequencyDensity,setFrequencyDensity]=useState(\"\")\r\n  let [RelativeFrequency,setRelativeFrequency]=useState(\"\")\r\n  let [classRange,setClassRange]=useState(\"\")\r\n  let [PercentageFrequency,setPercentageFrequency]=useState(\"\")\r\n\r\n  \r\n  //sum\r\n  let [frequencyTotal,setFrequencyTotal]=useState('')\r\n  let [sumFixi,setSumFixi]=useState(\"\")\r\n  let [sumFD,setSumFD]=useState(\"\")\r\n\r\n  //calculation\r\n  let [x_,setX_]=useState(\"\")\r\n  let [x_2,setX_2]=useState(\"\")\r\n\r\n  let [ready, setReady]=useState(false);\r\n  \r\n\r\n\r\n\r\n  function updateClasses(cla) {\r\n    setClasses(() => {\r\n      return cla;\r\n    });\r\n    setReady(false)\r\n  }\r\n\r\n  function updateFrequency(fre) {\r\n    setFrequency(() => {\r\n      return fre;\r\n    });\r\n    setReady(false)\r\n  }\r\n  function clearAll(){\r\n    setClasses(\"\")\r\n    setHighClass(\"\")\r\n    setLowClass(\"\")\r\n    setFrequency(\"\")\r\n    setD(\"\")\r\n    setA(\"\")\r\n    setFreXD(\"\")\r\n    setCAplus(\"\")\r\n    setMidPoints(\"\")\r\n    setFreXmid(\"\")\r\n    setLessCumulativeFrequency(\"\")\r\n    setGreaterCumulativeFrequency(\"\")\r\n    setFrequencyDensity(\"\")\r\n    setRelativeFrequency(\"\")\r\n    setClassRange(\"\")\r\n    setPercentageFrequency(\"\")\r\n    setFrequencyTotal(\"\")\r\n    setSumFixi(\"\")\r\n    setSumFD(\"\")\r\n    setX_(\"\")\r\n    setX_2(\"\")\r\n    setReady(false)\r\n  }\r\n  function classReady() {\r\n    //class work //class work//class work//class work//class work\r\n    //console.log(classes);\r\n    //console.log(frequency);\r\n    let viewClasses = classes.split(\",\");\r\n\r\n    setClasses(viewClasses)\r\n    //setting class view\r\n    let lowClass = viewClasses.map((val) => val.split(\"-\")[0]);\r\n    lowClass = lowClass.map((value) => parseInt(value));\r\n    setLowClass(lowClass);\r\n    let highClass = viewClasses.map((val) => val.split(\"-\")[1]);\r\n    highClass = highClass.map((value) => parseInt(value));\r\n\r\n    setHighClass(highClass);\r\n    let middlePoint = lowClass.map((value, index) => {\r\n      return (value + highClass[index]) / 2;\r\n    });\r\n    //console.log(middlePoint);\r\n\r\n    setMidPoints(() => {\r\n      return middlePoint;\r\n    });\r\n    //class work//class work//class work//class work//class work\r\n\r\n    let numFre = frequency.split(\",\");\r\n    numFre = numFre.map((value) => parseInt(value));\r\n\r\n    setFrequency(() => {\r\n      return numFre;\r\n    });\r\n    let totalF=0;\r\n    numFre.map((value)=>totalF+=value)\r\n    setFrequencyTotal(totalF)\r\n    //console.log(\"frequencyTotal : \",totalF)\r\n\r\n    //class range\r\n    let classR=lowClass.map((value,index)=>highClass[index]-value)\r\n    setClassRange(classR)\r\n    //class range\r\n\r\n\r\n\r\n    //Less Than Cumulative Frequency\r\n\r\n    let lessThanCF=[]\r\n    numFre.map((value,index)=>{\r\n      if(index===0){\r\n        lessThanCF.push(value)\r\n        return value\r\n      }else{\r\n        lessThanCF.push(lessThanCF[lessThanCF.length-1]+value)\r\n       return  lessThanCF[lessThanCF.length-1]+value\r\n      }\r\n    })\r\n    setLessCumulativeFrequency(lessThanCF)\r\n\r\n    //console.log(\"lessThanCF :\",lessThanCF)\r\n\r\n\r\n    \r\n    //Less Than Cumulative Frequency\r\n\r\n    let greaterThanCF=[]\r\n    numFre=numFre.reverse()\r\n    numFre.map((value,index)=>{\r\n      if(index===0){\r\n        greaterThanCF.push(value)\r\n        return value\r\n      }else{\r\n        greaterThanCF.push(greaterThanCF[greaterThanCF.length-1]+value)\r\n       return  greaterThanCF[greaterThanCF.length-1]+value\r\n      }\r\n    })\r\n    greaterThanCF=greaterThanCF.reverse()\r\n    setGreaterCumulativeFrequency(greaterThanCF)\r\n\r\n    //console.log(\"greaterThanCF :\",greaterThanCF)\r\n//successful\r\nnumFre=numFre.reverse()\r\nlet FrequencyD=numFre.map((value,index)=>{\r\n  return (value/classR[index])\r\n})\r\nsetFrequencyDensity(()=>{\r\n  return FrequencyD\r\n})\r\n\r\n//console.log(\"setFrequencyDensity : \", FrequencyD)\r\n\r\n\r\n    //frequency work\r\n    //frequency work\r\n    //frequency work\r\n    //frequency work\r\n    let RelativeF=numFre.map((value)=>(value/totalF).toFixed(3))\r\n    setRelativeFrequency(RelativeF)\r\n    //console.log(\"RelativeF :\",RelativeF)\r\n\r\n    let percentageF=RelativeF.map((value=>(value*100).toFixed(2)+\"%\"))\r\n    setPercentageFrequency(percentageF)\r\n    //console.log(\"setPercentageFrequency :\",percentageF)\r\n\r\n    let theA=middlePoint[parseInt((middlePoint.length)/2)]\r\n    setA(theA)\r\n    \r\n    let totalClassR=0\r\n    classR.map((value,index)=>{\r\n      return totalClassR+=value\r\n\r\n    })\r\n    let GorClassR=(totalClassR/classR.length)\r\n    let CPlus=true\r\n    if(GorClassR===classR[0]){\r\n      CPlus=true\r\n    }else{\r\n      CPlus=false\r\n    }\r\n    setCAplus(CPlus)\r\n\r\n    let theD=middlePoint.map((value)=>{\r\n      if(CPlus){\r\n        //console.log(\"same distance range\")\r\n        return ((value-theA)/classR[0])\r\n      }else{\r\n        //console.log(\"NOT same distance range\")\r\n        return (value-theA)\r\n      }\r\n      \r\n    })\r\n\r\n    setD(theD)\r\n\r\n     let frequencyXD=theD.map((value,index)=>{\r\n     return numFre[index]*value\r\n    })\r\n    setFreXD(frequencyXD)\r\n\r\n\r\n    //fixi\r\n\r\n    let fixi=numFre.map((value,index)=>value*middlePoint[index])\r\n    setFreXmid(fixi)\r\n\r\n    let sumFixi=0\r\n    fixi.map((value)=>sumFixi+=value)\r\n    setSumFixi(sumFixi)\r\n\r\n    let sumFrequencyXD=0\r\n    frequencyXD.map((value)=>{\r\n    return  sumFrequencyXD+=value\r\n    })\r\n    setSumFD(sumFrequencyXD)\r\n\r\n    //MAIN CALCULATION\r\n\r\n\r\n    //X_\r\n    //sortMethod\r\n\r\n    \r\n   \r\n    let TheX_;\r\n    if(CPlus){\r\n      TheX_=theA+(sumFrequencyXD/totalF)*classR[0]\r\n      //console.log(\"CPlus : True\")\r\n    }else{\r\n      TheX_=theA+(sumFrequencyXD/totalF)\r\n      //console.log(\"CPlus : false\")\r\n    }\r\n      \r\n    setX_(TheX_)\r\n    //console.log(TheX_)\r\n\r\n    //Real method\r\n\r\n   \r\n\r\n    let TheX2=sumFixi/totalF\r\n    setX_2(TheX2)\r\n\r\n\r\n    setReady(true)\r\n  }\r\n\r\n\r\n  //10-20,20-30,30-40,40-50\r\n  //10,55,10,22\r\n\r\n  return (\r\n    <div className=\"\">\r\n      <Input\r\n        frequency={frequency}\r\n        classes={classes}\r\n        setStateF={updateFrequency}\r\n        setStateC={updateClasses}\r\n        send={classReady}\r\n        clearAll={clearAll}\r\n      />\r\n      {ready?<Table\r\n        lcf={lessCumulativeFrequency}\r\n        hcf={greaterCumulativeFrequency}\r\n        classRange={classRange}\r\n        freXmid={freXmid}\r\n        frequencyDensity={frequencyDensity}  \r\n        RelativeFrequency={RelativeFrequency}\r\n        PercentageFrequency={PercentageFrequency}\r\n        CAplus={CAplus}\r\n        D_={D_}\r\n        A_={A_}\r\n        FreXD={FreXD}\r\n\r\n        highClass={highClass}\r\n        lowClass={lowClass}\r\n        frequency={frequency}\r\n        classes={classes}\r\n        midPoints={midPoints}\r\n\r\n        frequencyTotal={frequencyTotal}\r\n        sumFixi={sumFixi}\r\n        \r\n        sumFD={sumFD}\r\n        x_={x_}\r\n        x_2={x_2}\r\n\r\n      />:0}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react'\r\nimport Main from './app/main'\r\nexport default function App() {\r\n    return (\r\n        <div>\r\n          <Main/>  \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App'\n//import * as serviceWorker from './serviceWorker';\n\n//import reportWebVitals from './reportWebVitals';\n //import 'bootstrap/dist/css/bootstrap.min.css';\n// import 'bootstrap/dist/js/jquery-3.4.1.min.js'\n//import 'bootstrap/dist/js/bootstrap.js'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n//serviceWorker.register();"],"sourceRoot":""}
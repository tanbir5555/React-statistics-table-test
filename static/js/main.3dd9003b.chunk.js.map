{"version":3,"sources":["components/app/components/table.js","components/app/components/input.js","components/app/components/inputType2.js","components/app/components/header.js","components/app/main.js","components/Median App/components/InputTake.js","components/Median App/MedianControl1.js","components/Median App/components/InputTake2.js","components/Median App/MedianControl2.js","components/Median App/components/InputTake3.js","components/Median App/MedianControl3.js","components/Median App/AllMedian.js","components/App.js","index.js"],"names":["Table","CAplus","x_","x_2","sumFD","FreXD","D_","A_","sumFixi","frequencyTotal","PercentageFrequency","RelativeFrequency","frequencyDensity","freXmid","classRange","lcf","hcf","highClass","lowClass","frequency","classes","midPoints","className","id","map","value","index","Input","clearAll","setStateC","setStateF","send","onClick","onSubmit","e","preventDefault","onChange","target","placeholder","InputType2","show","viewHighest","viewSmallest","inputRange","updateInputRange","updateStart","updateEnd","startPoint","endPoint","processDone","process","inputStyles","height","style","Header","mode","setMode","Main","useState","inputClasses","setInputClasses","inputClasses2","setInputClasses2","splitInputClass2","setSplitInputClass2","setProcessDone","setStartPoint","setEndPoint","setInputRange","setViewSmallest","setViewHighest","inputFrequency","setInputFrequency","setClasses","setHighClass","setLowClass","setFrequency","setD","setA","setFreXD","setCAplus","setMidPoints","setFreXmid","lessCumulativeFrequency","setLessCumulativeFrequency","greaterCumulativeFrequency","setGreaterCumulativeFrequency","setFrequencyDensity","setRelativeFrequency","setClassRange","setPercentageFrequency","setFrequencyTotal","setSumFixi","setSumFD","setX_","setX_2","ready","setReady","clearVal","General","viewClasses","FREQUENCY","val","split","parseInt","middlePoint","numFre","totalF","classR","lessThanCF","push","length","greaterThanCF","reverse","FrequencyD","toFixed","RelativeF","percentageF","theA","totalClassR","GorClassR","CPlus","theD","frequencyXD","fixi","TheX_","sumFrequencyXD","fre","cla","classesNew","range","start","parseFloat","end","rowCount","total","numCounct","upperClass","lowerClass","Frequency","x","condition","filter","classStructure","toString","sortClass","sort","a","b","maxValClass","minValClass","ran","st","en","titleStyle","makeStyles","theme","root","color","palette","secondary","light","fontSize","padding","InputTake","props","styleOFTitle","Box","updateData","dataCore","Button","Oparation","marginTop","variant","MedianControl","setDataCore","Median","setMedian","separateData","N","right","madianOne","typeIndex","typeOne","InputTake2","UpdateDataFrequency","dataCoreFrequency","MedianControl2","setN","setCumulative","Jor","separateFrequency","TheN","reduce","store","Next","Cumulat","sequence","indexOfTargetClass","InputTake3","UpdateClass","Classes","UpdateFrequency","MedianControl3","myClasses","LowerClassLimit","UpperClassLimit","eachSection","MyFrequency","NetFrequency","data","StepNumberMedian","CumulativeFrequency","underTheCondition","console","log","MedianIndex","MedianClass","L1","Previous_cumulative_frequency","Current_class_Frequency","ClassDistance","C","TrueMedian","frequencys","TabPanel","children","other","role","hidden","aria-labelledby","p","Typography","a11yProps","MyPersonalTabStyle","backgroundColor","fontWeight","boxShadow","useStyles","flexGrow","AllMedian","React","setValue","TabCLASS","Container","AppBar","position","Tabs","event","newValue","aria-label","Tab","label","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3dd9003b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './style/table.css'\r\nexport default function Table({CAplus,x_,x_2,sumFD,FreXD,D_,A_,sumFixi,frequencyTotal,PercentageFrequency,RelativeFrequency,frequencyDensity,freXmid,classRange,lcf,hcf,highClass,lowClass,frequency,classes,midPoints}) {\r\n  return (\r\n    <div className=\"container\">\r\n      <table id=\"customers\">\r\n      <tbody>\r\n          \r\n       \r\n        <tr>\r\n          <td><strong>Classes</strong></td>\r\n          <td><strong>Frequency (fi)</strong></td>\r\n          <td><strong>Less Than Cumulative Frequency (L.c.f)</strong></td>\r\n          <td><strong>Greater Than Cumulative Frequency (M.c.f)</strong></td>\r\n          <td><strong>Upper Class Limit (u/h)</strong></td>\r\n          <td><strong>Lower Class Limit (s/L)</strong></td>\r\n          <td><strong>Middle Points (xi)</strong></td>\r\n\r\n          <td><strong>Class Range (c)</strong></td>\r\n         \r\n          <td><strong>Frequency Density (fi/c)</strong></td>\r\n          <td><strong>Relative Frequency (fi/N)</strong></td>\r\n          <td><strong>Percentage Frequency (fi/N)*100%</strong></td>\r\n          {CAplus?<td><strong>d=(x-{A_})/range</strong></td>:<td><strong>d=(x-{A_})</strong></td>}\r\n\r\n          <td><strong>Frequency * d</strong></td>\r\n          <td><strong>Frequency * Mid Points (fixi)</strong></td>\r\n\r\n\r\n          {/* <td><strong></strong></td> */}\r\n        </tr>\r\n\r\n{classes.map((value,index)=>{\r\n\r\n  return(\r\n    <tr key={index}>\r\n          <td>{value}</td>\r\n          <td>{frequency[index]}</td>\r\n          <td>{lcf[index]}</td>\r\n          <td>{hcf[index]}</td>\r\n          <td>{lowClass[index]}</td>\r\n          <td>{highClass[index]}</td>\r\n          <td>{midPoints[index]}</td>\r\n\r\n          <td>{classRange[index]}</td>\r\n          \r\n          <td>{frequencyDensity[index]}</td>\r\n          <td>{RelativeFrequency[index]}</td>\r\n          <td>{PercentageFrequency[index]}</td>\r\n          <td>{D_[index]}</td>\r\n          <td>{FreXD[index]}</td>\r\n          <td>{freXmid[index]}</td>\r\n\r\n          \r\n      </tr>\r\n  )\r\n})}\r\n        \r\n        \r\n       </tbody>\r\n      </table>\r\n\r\n      <div className='answers'>  \r\n      {CAplus?<div className='ans'><strong className='strong'> Range (C): </strong> {classRange[0]}  </div>:null}\r\n      <div className='ans'><strong className='strong'> A : </strong> {A_}  </div>\r\n      <div className='ans'><strong className='strong'>Sum of Frequency (N) : </strong> {frequencyTotal}  </div>\r\n      <div className='ans'><strong className='strong'> Sum of Frequency & d (x) : </strong> {sumFD}  </div>\r\n      <div className='ans'><strong className='strong'> Sum of Frequency & midPoints (x) (sum fixi) : </strong> {sumFixi}  </div>\r\n      <div className='ans'>{CAplus?<strong className='strong'> x_=A+(sumFd/N)*c (sortMethod) : </strong>:<strong className='strong'> x_=A+(sumFd/N) (sortMethod) : </strong>} {x_}  </div>\r\n      <div className='ans'><strong className='strong'> x_=sumFixi/N (MainMethod) : </strong> {x_2} </div>  \r\n       </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./style/input.css\";\r\nexport default function Input({clearAll,frequency,classes,setStateC,setStateF,send}) {\r\n    \r\n  return (\r\n    <div className=\"container\">\r\n      <h3 className=\"header\">Making Statistics Math App</h3>\r\n      <button onClick={()=>{clearAll()}} className='btn-clear'>  Clear </button>\r\n      <form\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n        }}\r\n      >\r\n        <h3 className=\"header small\">\r\n          Please Enter your <strong>classes</strong>\r\n        </h3>\r\n        <div className=\"inputs-area\">\r\n          {\" \"}\r\n          <textarea value={classes} onChange={(e)=>{setStateC(e.target.value)}} className=\"input\" placeholder=\"10-20,20-30....\">\r\n            \r\n          </textarea>{\" \"}\r\n        </div>\r\n        <h3 className=\"header small\">\r\n          Please Enter your <strong>Frequency</strong>{\" \"}\r\n        </h3>\r\n        <div className=\"inputs-area\">\r\n          {\" \"}\r\n          <textarea value={frequency} onChange={(e)=>{setStateF(e.target.value)}} className=\"input\" placeholder=\"5,8,7,10,2,1,3....\">\r\n            \r\n          </textarea>{\" \"}\r\n        </div>\r\n        <button onClick={()=>{send()}} className=\"btn-send\">Send</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport \"./style/input.css\";\r\nexport default function InputType2({viewHighest,viewSmallest,inputRange,updateInputRange,updateStart,updateEnd,startPoint,endPoint,processDone,process,clearAll,classes,setStateC,send}) {\r\n   \r\n    let show;\r\n\r\n    let inputStyles={\r\n        height:\"80px\",\r\n    }\r\n    if(processDone){\r\n        show=(\r\n            \r\n           <div className=''>  \r\n           <div className=''>  \r\n            <h3 className=\"header small\">\r\n            Please Enter your <strong>classes</strong>\r\n          </h3>\r\n          <div className=\"inputs-area\">\r\n            {\" \"}\r\n            <textarea value={classes} onChange={(e)=>{setStateC(e.target.value)}} className=\"input\" placeholder=\"10,5,8,6,44,64,22,46...\">\r\n              \r\n            </textarea>{\" \"}\r\n          </div>\r\n           \r\n            </div>\r\n           <h3 className=\"header small\">Smallest Class : <strong>{viewSmallest}</strong></h3>\r\n           <h3 className=\"header small\">Highest Class : <strong>{viewHighest}</strong></h3>\r\n            <h3 className=\"header small\">\r\n            Enter distance or range of each <strong>class (c)</strong>\r\n          </h3>\r\n          <div className=\"inputs-area\">\r\n            {\" \"}\r\n            <input style={inputStyles} value={inputRange} onChange={(e)=>{updateInputRange(e.target.value)}} className=\"input\" placeholder=\"10\"/>\r\n              \r\n            \r\n          </div>\r\n\r\n            <h3 className=\"header small\">\r\n            Enter where to start <strong>class</strong>\r\n          </h3>\r\n          <div className=\"inputs-area\">\r\n            {\" \"}\r\n            <input style={inputStyles} value={startPoint} onChange={(e)=>{updateStart(e.target.value)}} className=\"input\" placeholder=\"0\"/>\r\n              \r\n            \r\n          </div>\r\n\r\n          <h3 className=\"header small\">\r\n          Enter where to End <strong>class</strong>\r\n          </h3>\r\n          <div className=\"inputs-area\">\r\n            {\" \"}\r\n            <input style={inputStyles} value={endPoint} onChange={(e)=>{updateEnd(e.target.value)}} className=\"input\" placeholder=\"100\"/>\r\n              \r\n            \r\n          </div>\r\n           \r\n            </div>\r\n        )\r\n    }else{\r\n        show=(\r\n            <div className=''>  \r\n            <h3 className=\"header small\">\r\n            Please Enter your <strong>classes</strong>\r\n          </h3>\r\n          <div className=\"inputs-area\">\r\n            {\" \"}\r\n            <textarea value={classes} onChange={(e)=>{setStateC(e.target.value)}} className=\"input\" placeholder=\"10,5,8,6,44,64,22,46...\">\r\n              \r\n            </textarea>{\" \"}\r\n          </div>\r\n           \r\n            </div>\r\n\r\n        )\r\n    }\r\n    return (\r\n      <div className=\"container\">\r\n        <h3 className=\"header\">Making Statistics Math App</h3>\r\n        <button onClick={()=>{clearAll()}} className='btn-clear'>  Clear </button>\r\n        <form\r\n          onSubmit={(e) => {\r\n            e.preventDefault();\r\n          }}\r\n        >\r\n          {show}\r\n          {/* <h3 className=\"header small\">\r\n            Please Enter your <strong>Frequency</strong>{\" \"}\r\n          </h3>\r\n          <div className=\"inputs-area\">\r\n            {\" \"}\r\n            <textarea value={frequency} onChange={(e)=>{setStateF(e.target.value)}} className=\"input\" placeholder=\"5,8,7,10,2,1,3....\">\r\n              \r\n            </textarea>{\" \"}\r\n          </div> */}\r\n          {/* <button onClick={()=>{process()}} className=\"btn-send\">Process</button> */}\r\n          {processDone?null:<button onClick={()=>{process()}} className=\"btn-send\">Process</button>}\r\n          {processDone?<button onClick={()=>{send()}} className=\"btn-send\">Send</button>:null}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  ","import React from 'react'\r\nimport './style/input.css'\r\n\r\nexport default function Header({mode,setMode}) {\r\n    return (\r\n        <div>\r\n            <div className=\"container\">\r\n               {mode?<button onClick={()=>{setMode(false)}}  className=\"btn-send\" >Switch</button>:<button onClick={()=>{setMode(true)}} className=\"btn-send\" >Switch</button>} \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Table from \"./components/table\";\r\nimport Input from \"./components/input\";\r\nimport InputType2 from \"./components/inputType2\";\r\nimport Header from \"./components/header\"\r\n//import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\nfunction Main() {\r\n  let [mode,setMode]=useState(true)\r\n\r\n  let [inputClasses, setInputClasses] = useState(\r\n    \"10-20,20-30,30-40,40-50,50-60,60-70,70-200\"\r\n  );\r\n  let [inputClasses2, setInputClasses2] = useState(\"5,6,9,5,7,8,5,15,20,44,45,35,30,32,50,52,15,11,33,44,45,40,60,70,65\");\r\n  let [splitInputClass2,setSplitInputClass2]=useState(\"\")\r\n  let [processDone, setProcessDone] = useState(false);\r\n  let [startPoint,setStartPoint]=useState(\"\")\r\n  let [endPoint,setEndPoint]=useState(\"\")\r\n  let [inputRange,setInputRange]=useState(\"\")\r\n  \r\n  let [viewSmallest,setViewSmallest]=useState(\"\")\r\n  let [viewHighest,setViewHighest]=useState(\"\")\r\n\r\n\r\n\r\n  let [inputFrequency, setInputFrequency] = useState(\"15,12,13,18,17,27,10\");\r\n\r\n  let [classes, setClasses] = useState(\"\");\r\n  let [highClass, setHighClass] = useState(\"\");\r\n  let [lowClass, setLowClass] = useState(\"\");\r\n  let [frequency, setFrequency] = useState(\"\");\r\n\r\n  let [D_, setD] = useState(\"\");\r\n  let [A_, setA] = useState(\"\");\r\n  let [FreXD, setFreXD] = useState(\"\");\r\n  let [CAplus, setCAplus] = useState(\"\");\r\n\r\n  let [midPoints, setMidPoints] = useState(\"\");\r\n  let [freXmid, setFreXmid] = useState(\"\");\r\n  let [lessCumulativeFrequency, setLessCumulativeFrequency] = useState(\"\");\r\n  let [greaterCumulativeFrequency, setGreaterCumulativeFrequency] = useState(\r\n    \"\"\r\n  );\r\n  let [frequencyDensity, setFrequencyDensity] = useState(\"\");\r\n  let [RelativeFrequency, setRelativeFrequency] = useState(\"\");\r\n  let [classRange, setClassRange] = useState(\"\");\r\n  let [PercentageFrequency, setPercentageFrequency] = useState(\"\");\r\n\r\n  //sum\r\n  let [frequencyTotal, setFrequencyTotal] = useState(\"\");\r\n  let [sumFixi, setSumFixi] = useState(\"\");\r\n  let [sumFD, setSumFD] = useState(\"\");\r\n\r\n  //calculation\r\n  let [x_, setX_] = useState(\"\");\r\n  let [x_2, setX_2] = useState(\"\");\r\n\r\n  let [ready, setReady] = useState(false);\r\n\r\n  function updateClasses(cla) {\r\n    setInputClasses(() => {\r\n      return cla;\r\n    });\r\n\r\n    clearVal();\r\n  }\r\n\r\n  function updateClasses2(cla) {\r\n    setInputClasses2(cla);\r\n    setReady(false);\r\n    setProcessDone(false)\r\n  }\r\n  function updateInputRange(ran){\r\n    setInputRange(ran)\r\n    setReady(false);\r\n  }\r\n  function updateStart(st){\r\n    setStartPoint(st)\r\n    setReady(false);\r\n  }\r\n  function updateEnd(en){\r\n    setEndPoint(en)\r\n    setReady(false);\r\n  }\r\n  function process() {\r\n    let classesNew = inputClasses2.split(\",\");\r\n    //console.log(classesNew.length)\r\n    classesNew = classesNew.map((value) => parseInt(value));\r\n    setSplitInputClass2(classesNew)\r\n    let sortClass = classesNew.sort(function (a, b) {\r\n      return a - b;\r\n    });\r\n    let maxValClass = sortClass[sortClass.length - 1];\r\n    let minValClass = sortClass[0];\r\n    setViewSmallest(minValClass)\r\n    setViewHighest(maxValClass)\r\n    // alert(\"min : \" + minValClass + \" max : \" + maxValClass);\r\n    \r\n    setProcessDone(true)\r\n    \r\n    \r\n    // //console.log(rowCount())\r\n\r\n  }\r\n\r\n  function send2(){\r\n    let classesNew =splitInputClass2\r\n    let range = inputRange;\r\n    let start = startPoint;\r\n    start = parseFloat(start);\r\n    let end = endPoint;\r\n    end = parseFloat(end);\r\n    range = parseFloat(range);\r\n\r\n    let rowCount = function () {\r\n      let total = start;\r\n      let numCounct = 0;\r\n      while (total < end) {\r\n        total += range;\r\n        numCounct += 1;\r\n      }\r\n      ////console.log(numCounct)\r\n      return numCounct;\r\n    };\r\n    let upperClass = [],\r\n      lowerClass = [],\r\n      Frequency=[]\r\n    for (let x = 0; x < rowCount(); x++) {\r\n      lowerClass.push(start + x * range);\r\n      upperClass.push(start + x * range + range);\r\n      let condition=classesNew.filter((e)=>{\r\n        return e>=lowerClass[x] && e<upperClass[x];\r\n      })\r\n      // let howMany=0\r\n      // classesNew.map((value)=>{\r\n        \r\n      //   if(value>=lowerClass[x] && value<upperClass[x]){\r\n      //    howMany+=1\r\n      //   }else{\r\n          \r\n      //   }\r\n      // })\r\n      Frequency.push(condition.length)\r\n      //console.log(\"condition :\",condition)\r\n    }\r\n    \r\n    setFrequency(Frequency)\r\n    //console.log(lowerClass);\r\n    //console.log(upperClass);\r\n\r\n    let classStructure = upperClass.map((value, index) => {\r\n      let StringLow = lowerClass[index].toString();\r\n      let StringHigh = value.toString();\r\n      return StringLow + \"-\" + StringHigh;\r\n    });\r\n    //console.log(classStructure);\r\n    setClasses(classStructure)\r\n\r\n    General(classStructure,Frequency)\r\n   \r\n  }\r\n\r\n  function updateFrequency(fre) {\r\n    setInputFrequency(() => {\r\n      return fre;\r\n    });\r\n\r\n    clearVal();\r\n  }\r\n  function clearAll() {\r\n    setInputFrequency(\"\");\r\n    setInputClasses(\"\");\r\n    clearVal();\r\n    setProcessDone(false)\r\n  }\r\n  function clearVal() {\r\n    setProcessDone(false)\r\n    setEndPoint(\"\")\r\n    setStartPoint(\"\")\r\n    setInputRange(\"\")\r\n    setInputClasses2(\"\");\r\n    setFrequency(\"\");\r\n    setClasses(\"\");\r\n    setHighClass(\"\");\r\n    setLowClass(\"\");\r\n    setReady(false);\r\n    setD(\"\");\r\n    setA(\"\");\r\n    setFreXD(\"\");\r\n    setCAplus(\"\");\r\n    setMidPoints(\"\");\r\n    setFreXmid(\"\");\r\n    setLessCumulativeFrequency(\"\");\r\n    setGreaterCumulativeFrequency(\"\");\r\n    setFrequencyDensity(\"\");\r\n    setRelativeFrequency(\"\");\r\n    setClassRange(\"\");\r\n    setPercentageFrequency(\"\");\r\n    setFrequencyTotal(\"\");\r\n    setSumFixi(\"\");\r\n    setSumFD(\"\");\r\n    setX_(\"\");\r\n    setX_2(\"\");\r\n  }\r\n  function classReady() {\r\n    clearVal();\r\n    //class work //class work//class work//class work//class work\r\n    ////console.log(classes);\r\n    ////console.log(frequency);\r\n    // //console.log(classes)\r\n    let viewClasses = inputClasses.split(\",\");\r\n\r\n    setClasses(viewClasses);\r\n    General(viewClasses,inputFrequency.split(\",\"))\r\n    //setting class view\r\n    \r\n  }\r\n\r\n  function General(viewClasses,FREQUENCY){\r\n    let lowClass = viewClasses.map((val) => val.split(\"-\")[0]);\r\n    lowClass = lowClass.map((value) => parseInt(value));\r\n    setLowClass(lowClass);\r\n    let highClass = viewClasses.map((val) => val.split(\"-\")[1]);\r\n    highClass = highClass.map((value) => parseInt(value));\r\n\r\n    setHighClass(highClass);\r\n    let middlePoint = lowClass.map((value, index) => {\r\n      return (value + highClass[index]) / 2;\r\n    });\r\n    ////console.log(middlePoint);\r\n\r\n    setMidPoints(() => {\r\n      return middlePoint;\r\n    });\r\n    //class work//class work//class work//class work//class work\r\n\r\n    let numFre = FREQUENCY;\r\n    numFre = numFre.map((value) => parseInt(value));\r\n    \r\n    setFrequency(() => {\r\n      return numFre;\r\n    });\r\n\r\n    let totalF = 0;\r\n    numFre.map((value) => (totalF += value));\r\n    setFrequencyTotal(totalF);\r\n    ////console.log(\"frequencyTotal : \",totalF)\r\n\r\n    //class range\r\n    let classR = lowClass.map((value, index) => highClass[index] - value);\r\n    setClassRange(classR);\r\n    //class range\r\n\r\n    //Less Than Cumulative Frequency\r\n\r\n    let lessThanCF = [];\r\n    numFre.map((value, index) => {\r\n      if (index === 0) {\r\n        lessThanCF.push(value);\r\n        return value;\r\n      } else {\r\n        lessThanCF.push(lessThanCF[lessThanCF.length - 1] + value);\r\n        return lessThanCF[lessThanCF.length - 1] + value;\r\n      }\r\n    });\r\n    setLessCumulativeFrequency(lessThanCF);\r\n\r\n    ////console.log(\"lessThanCF :\",lessThanCF)\r\n\r\n    //Less Than Cumulative Frequency\r\n\r\n    let greaterThanCF = [];\r\n    numFre = numFre.reverse();\r\n    numFre.map((value, index) => {\r\n      if (index === 0) {\r\n        greaterThanCF.push(value);\r\n        return value;\r\n      } else {\r\n        greaterThanCF.push(greaterThanCF[greaterThanCF.length - 1] + value);\r\n        return greaterThanCF[greaterThanCF.length - 1] + value;\r\n      }\r\n    });\r\n    greaterThanCF = greaterThanCF.reverse();\r\n    setGreaterCumulativeFrequency(greaterThanCF);\r\n\r\n    ////console.log(\"greaterThanCF :\",greaterThanCF)\r\n    //successful\r\n    numFre = numFre.reverse();\r\n    let FrequencyD = numFre.map((value, index) => {\r\n      return (value / classR[index]).toFixed(3);\r\n    });\r\n    setFrequencyDensity(() => {\r\n      return FrequencyD;\r\n    });\r\n\r\n    ////console.log(\"setFrequencyDensity : \", FrequencyD)\r\n\r\n    //frequency work\r\n    //frequency work\r\n    //frequency work\r\n    //frequency work\r\n    let RelativeF = numFre.map((value) => (value / totalF).toFixed(3));\r\n    setRelativeFrequency(RelativeF);\r\n    ////console.log(\"RelativeF :\",RelativeF)\r\n\r\n    let percentageF = RelativeF.map((value) => (value * 100).toFixed(2) + \"%\");\r\n    setPercentageFrequency(percentageF);\r\n    ////console.log(\"setPercentageFrequency :\",percentageF)\r\n\r\n    let theA = middlePoint[parseInt(middlePoint.length / 2)];\r\n    setA(theA);\r\n\r\n    let totalClassR = 0;\r\n    classR.map((value, index) => {\r\n      return (totalClassR += value);\r\n    });\r\n    let GorClassR = totalClassR / classR.length;\r\n    let CPlus = true;\r\n    if (GorClassR === classR[0]) {\r\n      CPlus = true;\r\n    } else {\r\n      CPlus = false;\r\n    }\r\n    setCAplus(CPlus);\r\n\r\n    let theD = middlePoint.map((value) => {\r\n      if (CPlus) {\r\n        ////console.log(\"same distance range\")\r\n        return (value - theA) / classR[0];\r\n      } else {\r\n        ////console.log(\"NOT same distance range\")\r\n        return value - theA;\r\n      }\r\n    });\r\n\r\n    setD(theD);\r\n\r\n    let frequencyXD = theD.map((value, index) => {\r\n      return numFre[index] * value;\r\n    });\r\n    setFreXD(frequencyXD);\r\n\r\n    //fixi\r\n\r\n    let fixi = numFre.map((value, index) => value * middlePoint[index]);\r\n    setFreXmid(fixi);\r\n\r\n    let sumFixi = 0;\r\n    fixi.map((value) => (sumFixi += value));\r\n    setSumFixi(sumFixi);\r\n\r\n    let sumFrequencyXD = 0;\r\n    frequencyXD.map((value) => {\r\n      return (sumFrequencyXD += value);\r\n    });\r\n    setSumFD(sumFrequencyXD);\r\n\r\n    //MAIN CALCULATION\r\n\r\n    //X_\r\n    //sortMethod\r\n\r\n    let TheX_;\r\n    if (CPlus) {\r\n      TheX_ = theA + (sumFrequencyXD / totalF) * classR[0];\r\n      ////console.log(\"CPlus : True\")\r\n    } else {\r\n      TheX_ = theA + sumFrequencyXD / totalF;\r\n      ////console.log(\"CPlus : false\")\r\n    }\r\n\r\n    setX_(TheX_);\r\n    ////console.log(TheX_)\r\n\r\n    //Real method\r\n\r\n    let TheX2 = sumFixi / totalF;\r\n    setX_2(TheX2);\r\n\r\n    setReady(true);\r\n  }\r\n\r\n  //10-20,20-30,30-40,40-50\r\n  //10,55,10,22\r\n\r\n  return (\r\n    <div className=\"\">\r\n     \r\n        <Header mode={mode} setMode={setMode}/>\r\n         {mode?<Input\r\n              frequency={inputFrequency}\r\n              classes={inputClasses}\r\n              setStateF={updateFrequency}\r\n              setStateC={updateClasses}\r\n              send={classReady}\r\n              clearAll={clearAll}\r\n            />:\r\n         \r\n            <InputType2\r\n              frequency={inputFrequency}\r\n              classes={inputClasses2}\r\n             \r\n              setStateC={updateClasses2}\r\n              send={send2}\r\n              clearAll={clearAll}\r\n              process={process}\r\n              processDone={processDone}\r\n              inputRange={inputRange}\r\n              updateInputRange={updateInputRange}\r\n\r\n\r\n              startPoint={startPoint}\r\n              updateStart={updateStart}\r\n              endPoint={endPoint}\r\n              updateEnd={updateEnd}\r\n\r\n              viewSmallest={viewSmallest}\r\n              viewHighest={viewHighest}\r\n\r\n            />}\r\n         \r\n\r\n        {ready ? (\r\n          <Table\r\n            lcf={lessCumulativeFrequency}\r\n            hcf={greaterCumulativeFrequency}\r\n            classRange={classRange}\r\n            freXmid={freXmid}\r\n            frequencyDensity={frequencyDensity}\r\n            RelativeFrequency={RelativeFrequency}\r\n            PercentageFrequency={PercentageFrequency}\r\n            CAplus={CAplus}\r\n            D_={D_}\r\n            A_={A_}\r\n            FreXD={FreXD}\r\n            highClass={highClass}\r\n            lowClass={lowClass}\r\n            frequency={frequency}\r\n            classes={classes}\r\n            midPoints={midPoints}\r\n            frequencyTotal={frequencyTotal}\r\n            sumFixi={sumFixi}\r\n            sumFD={sumFD}\r\n            x_={x_}\r\n            x_2={x_2}\r\n          />\r\n        ) : (\r\n          0\r\n        )}\r\n     \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\nimport './style/input.css';\nimport { Box ,Button} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nlet titleStyle = makeStyles((theme) => ({\n  root: {\n    color: theme.palette.secondary.light, //\"#0080ff\",\n    fontSize: '1.3rem',\n    padding: '1.5em 0em',\n    '& span': {\n      color: 'white',\n    },\n  },\n}));\nfunction InputTake(props) {\n  const styleOFTitle = titleStyle();\n  return (\n    <div>\n      <div className='input-area'>\n        <Box className={styleOFTitle.root}>\n          <span>Input </span>Class <span> here</span>\n        </Box>\n        <textarea\n          onChange={(e) => {\n            props.updateData(0, e.target.value);\n          }}\n          className='input'\n          value={props.dataCore}></textarea>\n      </div>\n      <Button onClick={()=>{props.Oparation()}} style={{marginTop:\"1.2em\"}} variant=\"contained\" color=\"secondary\">Get Meadian</Button>\n    </div>\n  );\n}\n\nexport default InputTake;\n","import React,{useState} from 'react'\nimport InputTake from './components/InputTake'\n// import InputTake2 from './components/InputTake2'\n// import InputTake3 from './components/InputTake3'\nimport {Button} from '@material-ui/core'\n\n\nfunction MedianControl() {\n   \n    // let [index,setIndex]=useState(1)\n\n    let [dataCore,setDataCore]=useState('10,15,20,25,30,40,50')\n\n    // let [viewData, setViewData]=useState(<InputTake dataCore={dataCore} updateData={UpdateData}/>)\n\n    function UpdateData(typeIndex,value) {\n        if(typeIndex===0){\n            typeOne(value)\n        }else if(typeIndex===1){\n            typeTwo(value)\n        }else if(typeIndex===2){\n            TypeThree(value)\n        }\n    }\n\n    function typeOne(value) {\n        setDataCore(value)\n\n    }\n\n    function typeTwo(value) {\n        setDataCore(value)\n    }\n\n    function TypeThree(value) {\n        setDataCore(value)\n    }\n\n\n\n    // setViewData(<InputTake dataCore={dataCore} updateData={UpdateData}/>)\n    //page control\n    function UpdateView(){\n        // if(index===0){\n           \n        //     setViewData(<InputTake dataCore={dataCore} updateData={UpdateData}/>)\n        //     setIndex(1)\n        // }else if(index===1){\n            \n        //     setViewData(<InputTake2  dataCore={dataCore} updateData={UpdateData}/>)\n        //     setIndex(2)\n        // }else if(index===2){\n            \n        //     setViewData(<InputTake3  dataCore={dataCore} updateData={UpdateData}/>)\n        //     setIndex(3)\n        // }else if(index===3){\n            \n        //     setViewData(<InputTake  dataCore={dataCore} updateData={UpdateData}/>)\n        //     setIndex(1)\n        // }else{\n\n        // }\n    }\n\n\n    let [Median,setMedian]=useState('')\n    function getResult(){\n        let Jor=true\n        let da=dataCore\n        let separateData= da.split(\",\")\n        separateData=separateData.map(val=>parseInt(val))\n        separateData=separateData.sort(function(a,b){return a-b})\n        let N=separateData.length;\n        \n        if(N%2===0){\n            Jor=true\n        }else{\n            Jor=false\n        }\n        let left=0\n        let right=0\n\n        if(Jor){\n            left=N/2\n            right=(N/2)+1\n            let madianOne=(separateData[left-1]+separateData[right-1])/2\n            setMedian(madianOne)\n\n        }else{\n            let left= (N+1)/2\n            let madianOne=separateData[left-1]\n            setMedian(madianOne)\n        }\n\n\n    }\n\n\n    return (\n        <div>\n            <InputTake Oparation={getResult} dataCore={dataCore} updateData={UpdateData}/>\n            {/* {viewData} */}\n            <div style={{color:\"white\",\"marginTop\":\"1.5em\",fontSize:\"1.3rem\"}}>\n            {Median}\n            </div>\n        </div>\n    )\n}\n\nexport default MedianControl\n","import React from 'react';\nimport './style/input.css';\nimport { Box ,Button} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nlet titleStyle = makeStyles((theme) => ({\n  root: {\n    color: theme.palette.secondary.light, //\"#0080ff\",\n    fontSize: '1.3rem',\n    padding: '1.5em 0em',\n    '& span': {\n      color: 'white',\n    },\n  },\n}));\nfunction InputTake2(props) {\n  const styleOFTitle = titleStyle();\n  return (\n    <div>\n      <div className='input-area'>\n        <Box className={styleOFTitle.root}>\n          <span>Input </span>Class <span> here</span>\n        </Box>\n        <textarea\n          onChange={(e) => {\n            props.updateData(0, e.target.value);\n          }}\n          className='input'\n          value={props.dataCore}></textarea>\n      </div>\n      <div className='input-area'>\n        <Box className={styleOFTitle.root}>\n          <span>Input </span>Frequency <span> here</span>\n        </Box>\n        <textarea\n          onChange={(e) => {\n            props.UpdateDataFrequency(e.target.value);\n          }}\n          className='input'\n          value={props.dataCoreFrequency}></textarea>\n      </div>\n      <Button onClick={()=>{props.Oparation()}} style={{marginTop:\"1.2em\"}} variant=\"contained\" color=\"secondary\">Get Meadian</Button>\n    </div>\n  );\n}\n\nexport default InputTake2;\n","import React,{useState} from 'react'\n\nimport InputTake2 from './components/InputTake2'\n\nimport {Button} from '@material-ui/core'\n\n\nfunction MedianControl2() {\n   \n    // let [index,setIndex]=useState(1)\n\n    let [dataCore,setDataCore]=useState('30,40,50,60,70,80')\n\n    // let [viewData, setViewData]=useState(<InputTake dataCore={dataCore} updateData={UpdateData}/>)\n\n    function UpdateData(typeIndex,value) {\n        if(typeIndex===0){\n            typeOne(value)\n        }else if(typeIndex===1){\n            typeTwo(value)\n        }else if(typeIndex===2){\n            TypeThree(value)\n        }\n    }\n\n    function typeOne(value) {\n        setDataCore(value)\n\n    }\n\n    function typeTwo(value) {\n        setDataCore(value)\n    }\n\n    function TypeThree(value) {\n        setDataCore(value)\n    }\n\n    let [Frequency,setFrequency]=useState(\"7,15,9,13,14,12\")\n\n    function UpdateDataFrequency(value){\n        setFrequency(value)\n    }\n\n\n\n    // setViewData(<InputTake dataCore={dataCore} updateData={UpdateData}/>)\n    //page control\n    function UpdateView(){\n        // if(index===0){\n           \n        //     setViewData(<InputTake dataCore={dataCore} updateData={UpdateData}/>)\n        //     setIndex(1)\n        // }else if(index===1){\n            \n        //     setViewData(<InputTake2  dataCore={dataCore} updateData={UpdateData}/>)\n        //     setIndex(2)\n        // }else if(index===2){\n            \n        //     setViewData(<InputTake3  dataCore={dataCore} updateData={UpdateData}/>)\n        //     setIndex(3)\n        // }else if(index===3){\n            \n        //     setViewData(<InputTake  dataCore={dataCore} updateData={UpdateData}/>)\n        //     setIndex(1)\n        // }else{\n\n        // }\n    }\n\n\n    let [Median,setMedian]=useState('')\n    let [N,setN]=useState(\"\")\n    let [Cumulative,setCumulative]=useState('')\n    function getResult(){\n        let Jor=true\n        let da=dataCore\n\n        let fre=Frequency\n\n        let separateData= da.split(\",\")\n        let separateFrequency=fre.split(\",\")\n        separateData=separateData.map(val=>parseInt(val))\n        separateFrequency=separateFrequency.map(val=>parseInt(val))\n\n        separateData=separateData.sort(function(a,b){return a-b})\n        separateFrequency=separateFrequency.sort(function(a,b){return a-b})\n\n\n        let TheN= separateFrequency.reduce((store,Next)=>{\n            return store+Next\n        })\n        setN(TheN)\n        \n\n\n        \n        \n\n        \n        if(N%2===0){\n            Jor=true\n        }else{\n            Jor=false\n        }\n\n\n        let Cumulat=[]\n        separateFrequency.map((value,index)=>{\n            if(index===0){\n                Cumulat.push(value)\n            }else{\n                Cumulat.push(Cumulat[Cumulat.length-1]+value)\n            }\n        })\n        // console.log(Cumulat)\n\n        setCumulative(Cumulat)\n        let sequence=0\n        \n        if(Jor){\n            sequence=TheN/2\n        }else{\n            sequence=(TheN+1)/2\n        }\n        let indexOfTargetClass=[]\n\n        Cumulat.map((val,index)=>{\n            if(val>sequence){\n                indexOfTargetClass.push(index)\n            }else{\n\n            }\n        })\n\n        setMedian((separateData[indexOfTargetClass[0]])+\"th Class\")\n\n\n    }\n\n\n    return (\n        <div>\n            <InputTake2 dataCoreFrequency={Frequency}  Oparation={getResult} dataCore={dataCore} updateData={UpdateData} UpdateDataFrequency={UpdateDataFrequency}/>\n           \n            <div style={{color:\"white\",\"marginTop\":\"1.5em\",fontSize:\"1.3rem\"}}>\n            {Median}\n            </div>\n        </div>\n    )\n}\n\nexport default MedianControl2\n","import React from 'react';\nimport './style/input.css';\nimport { Box ,Button} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nlet titleStyle = makeStyles((theme) => ({\n  root: {\n    color: theme.palette.secondary.light, //\"#0080ff\",\n    fontSize: '1.3rem',\n    padding: '1.5em 0em',\n    '& span': {\n      color: 'white',\n    },\n  },\n}));\nfunction InputTake3(props) {\n  const styleOFTitle = titleStyle();\n  return (\n    <div>\n      <div className='input-area'>\n        <Box className={styleOFTitle.root}>\n          <span>Input </span>Class <span> here</span>\n        </Box>\n        <textarea\n          onChange={(e) => {\n            props.UpdateClass(e.target.value);\n          }}\n          className='input'\n          value={props.Classes}></textarea>\n      </div>\n      <div className='input-area'>\n        <Box className={styleOFTitle.root}>\n          <span>Input </span>Frequency <span> here</span>\n        </Box>\n        <textarea\n          onChange={(e) => {\n            props.UpdateFrequency(e.target.value);\n          }}\n          className='input'\n          value={props.frequency}></textarea>\n      </div>\n      <Button onClick={()=>{props.Oparation()}} style={{marginTop:\"1.2em\"}} variant=\"contained\" color=\"secondary\">Get Meadian</Button>\n    </div>\n  );\n}\n\nexport default InputTake3;\n","import React, { useState } from 'react';\nimport InputTake3 from './components/InputTake3';\n\nfunction MedianControl3() {\n  let [Frequency, setFrequency] = useState('9,20,20,15,16');\n//   let [Frequency, setFrequency] = useState('12,4,13,21,10');\n  let [classes, setClasses] = useState('50-100,100-150,150-200,200-250,250-300');\n  //   let [classes, setClasses] = useState('20-30,30-40,40-50,50-60,60-70');\n  let [Median, setMedian] = useState('');\n\n  function UpdateClass(classes) {\n    setClasses(classes);\n  }\n  function UpdateFrequency(frequencys) {\n    setFrequency(frequencys);\n  }\n  function getResult() {\n    //Collecting class Data\n    let myClasses = classes;\n    myClasses = myClasses.split(',');\n    let LowerClassLimit = [];\n    let UpperClassLimit = [];\n    myClasses.map((val) => {\n      let eachSection = val.split('-');\n      LowerClassLimit.push(parseFloat(eachSection[0]));\n      UpperClassLimit.push(parseFloat(eachSection[1]));\n      return eachSection;\n    });\n    //Collecting class Data END****\n\n    //Collecting Frequencys\n    let MyFrequency = Frequency;\n    MyFrequency = MyFrequency.split(',');\n    MyFrequency = MyFrequency.map((val) => {\n      return parseFloat(val);\n    });\n\n    // console.log(LowerClassLimit)\n    // console.log(UpperClassLimit)\n    // console.log(myClasses)\n    // console.log(MyFrequency)\n\n    //---*****Perfect\n\n    //Total frequency\n    let NetFrequency = MyFrequency.reduce((store, data) => {\n      return store + data;\n    }, 0);\n\n    // console.log(NetFrequency);\n\n    //Meadin *th Number\n\n    let StepNumberMedian = NetFrequency / 2;\n\n    //Cumulative Frequency\n\n    let CumulativeFrequency = [];\n    MyFrequency.map((val, index) => {\n      if (index === 0) {\n        CumulativeFrequency.push(val);\n      } else {\n        CumulativeFrequency.push(CumulativeFrequency[index - 1] + val);\n      }\n      return CumulativeFrequency;\n    });\n\n    // console.log(CumulativeFrequency);\n\n    //We are about to get the Class sequence\n    let underTheCondition = [];\n\n    CumulativeFrequency.map((val, index) => {\n      if (val >= StepNumberMedian) {\n        underTheCondition.push(index);\n      } else {\n      }\n      return underTheCondition;\n    });\n    console.log(underTheCondition);\n\n    //Targeting Median Class\n    let MedianIndex = underTheCondition[0];\n\n    let MedianClass = myClasses[MedianIndex];\n    console.log(MedianClass);\n\n    // Collecting all Data for the Equation\n    let Jor = null;\n    if (NetFrequency % 2 === 0) {\n      Jor = true;\n    } else {\n      Jor = false;\n    }\n\n    let L1 = LowerClassLimit[MedianIndex];\n    let N = NetFrequency;\n    let Previous_cumulative_frequency = CumulativeFrequency[MedianIndex - 1];\n    let Current_class_Frequency = MyFrequency[MedianIndex];\n    let ClassDistance =\n      UpperClassLimit[MedianIndex] - LowerClassLimit[MedianIndex];\n    let C = ClassDistance;\n    console.log(L1);\n    console.log(N);\n    console.log(Previous_cumulative_frequency);\n    console.log(Current_class_Frequency);\n    console.log(ClassDistance);\n    console.log(C);\n    console.log(Jor)\n    //the Equation\n    let topLeft=Jor?N/2:N/2+1\n      \n    \n\n    let TrueMedian =\n      L1 +\n      ((topLeft - Previous_cumulative_frequency) / Current_class_Frequency) * C;\n\n    console.log(TrueMedian);\n    setMedian(TrueMedian)\n  }\n\n  return (\n    <div>\n      <InputTake3\n        frequency={Frequency}\n        Oparation={getResult}\n        Classes={classes}\n        UpdateClass={UpdateClass}\n        UpdateFrequency={UpdateFrequency}\n      />\n\n      <div style={{ color: 'white', marginTop: '1.5em', fontSize: '1.3rem' }}>\n        {Median}\n      </div>\n    </div>\n  );\n}\n\nexport default MedianControl3;\n","\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport {Tab,Container} from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\n\nimport MedianControl from './MedianControl1'\nimport MedianControl2 from './MedianControl2'\nimport MedianControl3 from './MedianControl3'\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nlet MyPersonalTabStyle=makeStyles({\n  root:{\n    backgroundColor:\"#17171d\",\n    color:\"#fff\",\n    fontWeight:500,\n    boxShadow:\"0 0 0 #00000000\",\n\n  }\n})\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    // backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nexport default function AllMedian() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n  let TabCLASS=MyPersonalTabStyle()\n\n  return (\n    <Container className={classes.root}>\n      <AppBar className={TabCLASS.root}  position=\"static\">\n        <Tabs\n       className={TabCLASS.root}\n        \n         value={value} onChange={handleChange} aria-label=\"simple tabs example\">\n          <Tab label=\"Type-1\" {...a11yProps(0)} />\n          <Tab  label=\"Type-2\" {...a11yProps(1)} />\n          <Tab  label=\"Type-3\" {...a11yProps(2)} />\n         \n\n        </Tabs>\n      </AppBar>\n      <TabPanel value={value} index={0}>\n      <MedianControl/>\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n       <MedianControl2/>\n      </TabPanel>\n      <TabPanel style={{color:\"white\"}} value={value} index={2}>\n       <MedianControl3/>\n      </TabPanel>\n     \n    </Container>\n  );\n}\n","// import React from 'react'\r\n// import Main from './app/main'\r\n// export default function App() {\r\n//     return (\r\n//         <div>\r\n//           <Main/>  \r\n//         </div>\r\n//     )\r\n// }\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport {Tab,Container} from '@material-ui/core';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport Main from './app/main'\r\nimport AllMedian from './Median App/AllMedian'\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    'aria-controls': `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nlet MyPersonalTabStyle=makeStyles({\r\n  root:{\r\n    backgroundColor:\"#17171d\",\r\n    color:\"#fff\",\r\n    fontWeight:500,\r\n    boxShadow:\"0 0 0 #00000000\",\r\n\r\n  }\r\n})\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    // backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default function App() {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n  let TabCLASS=MyPersonalTabStyle()\r\n\r\n  return (\r\n    <Container className={classes.root}>\r\n      <AppBar className={TabCLASS.root}  position=\"static\">\r\n        <Tabs\r\n       className={TabCLASS.root}\r\n        \r\n         value={value} onChange={handleChange} aria-label=\"simple tabs example\">\r\n          <Tab label=\"Mean (X_)\" {...a11yProps(0)} />\r\n          <Tab  label=\"Meadian(Me)\" {...a11yProps(1)} />\r\n          <Tab  label=\"Mode(Mo)\" {...a11yProps(2)} />\r\n          <Tab  label=\"Gemomatric Mean(GM)\" {...a11yProps(3)} />\r\n\r\n        </Tabs>\r\n      </AppBar>\r\n      <TabPanel value={value} index={0}>\r\n       <Main/>\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>\r\n       <AllMedian/>\r\n      </TabPanel>\r\n      <TabPanel style={{color:\"white\"}} value={value} index={2}>\r\n       Coming Soon \r\n      </TabPanel>\r\n      <TabPanel style={{color:\"white\"}}  value={value} index={3}>\r\n        Geomatric Mean (Coming Soon )\r\n      </TabPanel>\r\n    </Container>\r\n  );\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App'\n//import * as serviceWorker from './serviceWorker';\n\n//import reportWebVitals from './reportWebVitals';\n //import 'bootstrap/dist/css/bootstrap.min.css';\n// import 'bootstrap/dist/js/jquery-3.4.1.min.js'\n//import 'bootstrap/dist/js/bootstrap.js'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n//serviceWorker.register();"],"sourceRoot":""}